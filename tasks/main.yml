---
# tasks file for roles/lvm_role

- name: tasks configure and mount filesystem for an alzheimer's clinical trial
  block:
   - name: task installs  packages
     ansible.builtin.yum:
       name: "{{ item.package }}"
       state: "{{ item.state }}"
     loop: "{{ packages }}"

   - name: task capture block devices info from servers when /dev/sdb exits
     ansible.builtin.shell: lsblk
     register: lsblk0_result

   - name: task displays block devices
     ansible.builtin.debug:
       var: lsblk0_result

   - name: reload partitions to kernel
     ansible.builtin.shell: partprobe /dev/sdb

   - name: task creates partition {{ partition0 }} 
     community.general.parted:
      device: "{{ item.partition0 }}"
      number: "{{ item.number }}"
      flags: "{{ item.flags }}"
      state: "{{ item.state }}"
      part_end: "{{ item.part_end }}"
     loop: "{{ partitions }}"

   - name: task creates volume group 
     community.general.lvg:
       vg: "{{ item.vg_name }}"
       pvs: "{{ item.pvs }}"
       pesize: "{{ item.pesize }}"
     loop: "{{ volumegroups }}"

   - name: task creates a logical volume of size 50% of volume group
     community.general.lvol:
       vg: "{{ item.vg_name }}"
       lv: "{{ item.lv_name }}"
       size: "{{ item.size }}"
       shrink: false
     loop: "{{ logicalvolumes }}"
     ignore_errors: true
 
   - name: task creates a xfs filesystem 
     community.general.filesystem:
       dev: /dev/{{ item.vg_name }}/{{ item.lv_name }}
       fstype: "{{ item.filesystemtype }}"
       uuid: "{{ item.uuid }}"
     loop: "{{ alzheimersfilesystem }}"
     register: create_results
     failed_when: "'contains a mounted' not in create_results.stderr"

   - name: captures filesystem uuid for dns2.nextgenlabs.com
     ansible.builtin.shell: lsblk /dev/mapper/vg.alzheimers-lv.alzheimers -no uuid
     register: lsblk1_result
     when: ansible_hostname == "dns2"

   - name: print server dns2 uuid
     ansible.builtin.debug:
      var: lsblk1_result.stdout

   - name: capture filesystem uuid for database2.nextgenlabs.com
     ansible.builtin.shell: lsblk /dev/mapper/vg.alzheimers-lv.alzheimers -no uuid
     register: lsblk2_result
     when: ansible_hostname == "database2"

   - name: print server database2 uuid
     ansible.builtin.debug:
      var: lsblk2_result.stdout


   - name: task create mount point
     ansible.builtin.file: 
      path: /mnt/alzheimers
      state: directory
      recurse: true
      owner: root
      group: root
      mode: '0664'

   - name: task creates a persistent mount for alzheimers fs on dns2 server
     ansible.posix.mount:
      path: /mnt/alzheimers
      src: UUID={{ lsblk1_result.stdout }}
      fstype: xfs
      dump: 1
      passno: 2
      state: mounted
     when: ansible_hostname == "dns2"

   - name: task creates a persistent mount for alzheimers fs on database2 server
     ansible.posix.mount:
      src: UUID={{ lsblk2_result.stdout }}
      path: /mnt/alzheimers
      fstype: xfs
      dump: 1
      passno: 2
      state: mounted
     when: ansible_hostname == "database2"

   - name: task does a daemon reload
     ansible.builtin.shell: systemctl daemon-reload
     



  when: ansible_facts['devices']['sdb'] is defined


